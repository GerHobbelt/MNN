SET(ROOT_DIR ${CMAKE_CURRENT_LIST_DIR}/../../../../../../)
SET(TRAIN_SOURCE ${ROOT_DIR}/tools/train/source)
include_directories(${TRAIN_SOURCE}/grad)
include_directories(${TRAIN_SOURCE}/optimizer)
include_directories(${TRAIN_SOURCE}/transformer)
include_directories(${TRAIN_SOURCE}/data)
include_directories(${TRAIN_SOURCE}/models)
include_directories(${TRAIN_SOURCE}/datasets)
include_directories(${TRAIN_SOURCE}/demo)
include_directories(${TRAIN_SOURCE}/nn)
file(GLOB GRAD ${TRAIN_SOURCE}/grad/*)
file(GLOB OPT ${TRAIN_SOURCE}/optimizer/*)
file(GLOB TRANS ${TRAIN_SOURCE}/transformer/*)
file(GLOB DATA ${TRAIN_SOURCE}/data/*)
file(GLOB MODELS ${TRAIN_SOURCE}/models/*)
file(GLOB DATASET ${TRAIN_SOURCE}/datasets/*)
file(GLOB DEMOSOURCE ${TRAIN_SOURCE}/demo/*)
file(GLOB NNFILES ${TRAIN_SOURCE}/nn/*)
set(MNN_JNI_SRCS MNNJni.cpp ${GRAD} ${OPT} ${TRANS} ${DATA} ${MODELS} ${DATASET} ${DEMOSOURCE} ${NNFILES})

IF(MNN_SEP_BUILD)
    add_library(MNNJni SHARED ${MNN_JNI_SRCS})
    target_link_libraries(MNNJni ${MNN_DEPS})
ELSE()
    add_library(MNNJni OBJECT ${MNN_JNI_SRCS})
ENDIF()
target_compile_definitions(MNNJni PRIVATE STB_IMAGE_STATIC STB_IMAGE_IMPLEMENTATION)

find_library( log-lib log )

target_link_libraries( MNNJni ${log-lib} )