name: mnn_release
on: push
jobs:
  setup:
    permissions:
      contents: none
    runs-on: ubuntu-latest
    outputs:
      VERSION: ${{ steps.get_version.outputs.VERSION }}
    steps:
    - name: get-version
      id: get_version
      run: echo "VERSION=${GITHUB_REF/refs\/tags\//}" >> $GITHUB_OUTPUT

  full-source:
    needs: [setup]
    runs-on: ubuntu-latest
    env:
      PACKAGENAME: mnn_${{ needs.setup.outputs.VERSION }}_source_code
    steps:
    - uses: actions/checkout@v3
      with:
        submodules: true
    - name: package
      run: |
        ls
        rm -rf .git
        rm -f /tmp/${{ env.PACKAGENAME }}.zip
        zip -9 -y -r /tmp/${{ env.PACKAGENAME }}.zip .
    - name: upload-zip
      uses: actions/upload-artifact@v3
      with:
        name: ${{ env.PACKAGENAME }}
        path: /tmp/${{ env.PACKAGENAME }}.zip

  linux-release:
    needs: [setup]
    runs-on: ubuntu-latest
    env:
      PACKAGENAME: mnn_${{ needs.setup.outputs.VERSION }}_linux_x64_cpu_opencl
    steps:
    - uses: actions/checkout@v3
      with:
        submodules: true
    - name: build
      run: |
        ./package_scripts/linux/build_lib.sh -o ${{ env.PACKAGENAME }}/lib -b opencl -s -c
    - name: package
      run: |
        rm -f ${{ env.PACKAGENAME }}.zip
        zip -9 -y -r ${{ env.PACKAGENAME }}.zip ${{ env.PACKAGENAME }}
    - name: upload-zip
      uses: actions/upload-artifact@v3
      with:
        name: ${{ env.PACKAGENAME }}
        path: ${{ env.PACKAGENAME }}.zip

  windows-release:
    needs: [setup]
    runs-on: windows-latest
    env:
      PACKAGENAME: mnn_${{ needs.setup.outputs.VERSION }}_windows_x64_cpu_opencl
    steps:
    - uses: actions/checkout@v3
      with:
        submodules: true

    - name: using msvc
      uses: ilammy/msvc-dev-cmd@v1

    - name: build
      run: |
        powershell .\package_scripts\win\build_lib_release.ps1 -path ${{ env.PACKAGENAME }}
    - name: package
      run: |
        7z a -r ${{ env.PACKAGENAME }}.zip ${{ env.PACKAGENAME }}
    - name: upload-zip
      uses: actions/upload-artifact@v3
      with:
        name: ${{ env.PACKAGENAME }}
        path: ${{ env.PACKAGENAME }}.zip

  macos-release:
    needs: [setup]
    runs-on: macos-latest
    env:
      PACKAGENAME: mnn_${{ needs.setup.outputs.VERSION }}_macos_x64_arm82_cpu_opencl_metal
    steps:
    - uses: actions/checkout@v3
      with:
        submodules: true

    - name: build
      run: |
        ./package_scripts/mac/buildFrameWork.sh
    - name: package
      run: |
        rm -rf ${{ env.PACKAGENAME }}
        mv MNN-MacOS-CPU-GPU ${{ env.PACKAGENAME }}
        rm -f ${{ env.PACKAGENAME }}.zip
        zip -9 -y -r ${{ env.PACKAGENAME }}.zip ${{ env.PACKAGENAME }}
    - name: upload-zip
      uses: actions/upload-artifact@v3
      with:
        name: ${{ env.PACKAGENAME }}
        path: ${{ env.PACKAGENAME }}.zip

  android-release:
    needs: [setup]
    runs-on: ubuntu-latest
    env:
      PACKAGENAME: mnn_${{ needs.setup.outputs.VERSION }}_android_armv7_armv8_cpu_opencl_vulkan
    steps:
    - uses: actions/checkout@v3
      with:
        submodules: true
    - name: build
      run: |
        ./package_scripts/android/build.sh -o ${{ env.PACKAGENAME }}
    - name: package
      run: |
        rm -f ${{ env.PACKAGENAME }}.zip
        zip -9 -y -r ${{ env.PACKAGENAME }}.zip ${{ env.PACKAGENAME }}
    - name: upload-zip
      uses: actions/upload-artifact@v3
      with:
        name: ${{ env.PACKAGENAME }}
        path: ${{ env.PACKAGENAME }}.zip