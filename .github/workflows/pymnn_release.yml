name: pymnn_release
on: [push]
jobs:
  build_wheels:
    name: ${{ matrix.arch }} ${{ matrix.build }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - { os: ubuntu-latest,    arch: x86_64,     build: 'cp39-manylinux*' }
          - { os: windows-latest,   arch: AMD64,      build: 'cp39-*'          }
          - { os: macos-latest,     arch: x86_64,     build: 'cp39-*'          }

    steps:
    - uses: actions/checkout@v3
      with:
        submodules: true

    - name: New Tags
      if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
      run: echo "Push new tag"

    - name: using msvc
      if: matrix.os == 'windows-latest'
      uses: ilammy/msvc-dev-cmd@v1

    - uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    - name: Build wheels
      uses: pypa/cibuildwheel@v2.11.4
      env:
        CIBW_ARCHS_MACOS: ${{ matrix.arch }}
        CIBW_ARCHS_LINUX: ${{ matrix.arch }}
        CIBW_ARCHS_WINDOWS: ${{ matrix.arch }}
        CIBW_BUILD: ${{ matrix.build }}
        CIBW_BUILD_VERBOSITY: 1
        CIBW_ENVIRONMENT: CMAKE_BUILD_PARALLEL_LEVEL=2
      with:
        package-dir: pymnn/pip_package
        output-dir: wheelhouse
        config-file: "{package}/pyproject.toml"

    - name: Show files
      run: ls -lh wheelhouse
      shell: bash

    - name: Verify clean directory
      run: git diff --exit-code
      shell: bash

    - name: Upload wheels
      uses: actions/upload-artifact@v3
      with:
        path: wheelhouse/*.whl

  publish_wheels:
    permissions:
      contents: none
    name: Upload
    needs: [build_wheels]
    runs-on: ubuntu-latest

    steps:
    - uses: actions/setup-python@v4
      with:
        python-version: '3.x'

    - uses: actions/download-artifact@v3
      with:
        name: artifact
        path: dist

    - name: Publish package
      if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        password: ${{ secrets.PYPI_API_TOKEN }}
